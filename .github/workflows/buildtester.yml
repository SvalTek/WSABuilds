name: Custom Build (for testing purpose)
run-name: WSA ${{ inputs.release_type }} ${{ inputs.arch }} with ${{ inputs.root_sol }} and ${{ inputs.gapps_brand }} as ${{ inputs.custom_model }}

on:
  workflow_dispatch:
    inputs:
      wintype:
        type: choice
        options: ["Windows 10", "Windows 11"]
        default: "Windows 11"
      arch:
        type: choice
        options: [x64, arm64]
        default: x64
      release_type:
        type: choice
        options: ["Retail", "Release Preview", "Insider Slow", "Insider Fast", "Insider Private"]
        default: "Retail"
      user_code:
        type: string
        required: false
      root_sol:
        type: choice
        options: ["Non-root","KernelSU","Magisk Stable","Magisk Beta","Magisk Canary","Magisk Debug","Magisk Alpha (vvb2060)","Magisk Delta (HuskyDG)"]
        default: "Magisk Stable"
      gapps_brand:
        type: choice
        options: ["MindTheGapps v13.0", "No GApps"]
        default: "MindTheGapps v13.0"
      custom_model:
        type: choice
        options: ["WSA Default", "Pixel 4a", "Pixel 4a (5G)", "Pixel 5", "Pixel 5a", "Pixel 6", "Pixel 6 Pro", "Pixel 6a", "Pixel 7", "Pixel 7 Pro", "Pixel 7a", "Pixel Tablet", "Pixel Fold"]
        default: "Pixel 5"
      compression:
        type: choice
        options: [".zip",".7z"]
        default: ".7z"
      remove_amazon:
        type: boolean
        default: true

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    outputs:
      artifact: MagiskOnWSA-output
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y e2fsprogs attr unzip qemu-utils python3-venv
          python3 -m venv python3-env
          source python3-env/bin/activate
          pip install -r MagiskOnWSA/scripts/requirements.txt
          deactivate

      - name: Set Environment and Build
        id: buildwsa
        working-directory: MagiskOnWSA
        run: |
          declare -A opts=(
            ["Retail"]="retail" ["Release Preview"]="RP" ["Insider Slow"]="WIS" ["Insider Fast"]="WIF" ["Insider Private"]="latest"
            ["Magisk Stable"]="stable" ["Magisk Beta"]="beta" ["Magisk Canary"]="canary" ["Magisk Debug"]="debug" ["Magisk Delta (HuskyDG)"]="delta" ["Magisk Alpha (vvb2060)"]="alpha"
            ["KernelSU"]="kernelsu" ["Non-root"]="none"
            ["MindTheGapps v13.0"]="MindTheGapps" ["No GApps"]="none"
            ["WSA Default"]="none" ["Pixel 4a"]="sunfish" ["Pixel 4a (5G)"]="bramble" ["Pixel 5"]="redfin" ["Pixel 5a"]="barbet"
            ["Pixel 6"]="oriole" ["Pixel 6 Pro"]="raven" ["Pixel 6a"]="bluejay" ["Pixel 7"]="panther" ["Pixel 7 Pro"]="cheetah"
            ["Pixel 7a"]="lynx" ["Pixel Tablet"]="tangorpro" ["Pixel Fold"]="felix"
            [".zip"]="zip" [".7z"]="7z"
          )

          mkdir -p download
          echo "user_code=${{ github.event.inputs.user_code }}" > download/.ms_account

          export GAPPS_BRAND="${opts[${{ github.event.inputs.gapps_brand }}]}"
          export CUSTOM_MODEL="${opts[${{ github.event.inputs.custom_model }}]}"

          if [[ "${{ github.event.inputs.root_sol }}" == *Magisk* ]]; then
            ROOT_SOL="magisk"
            MAGISK_VER="${opts[${{ github.event.inputs.root_sol }}]}"
          else
            ROOT_SOL="${opts[${{ github.event.inputs.root_sol }}]}"
            MAGISK_VER="stable"
          fi

          ./scripts/build.sh \
            --arch "${{ github.event.inputs.arch }}" \
            --release-type "${opts[${{ github.event.inputs.release_type }}]}" \
            --magisk-ver "$MAGISK_VER" \
            --root-sol "$ROOT_SOL" \
            --compress-format "${opts[${{ github.event.inputs.compression }}]}" \
            $([[ "${{ github.event.inputs.remove_amazon }}" == "true" ]] && echo "--remove-amazon")

      - name: Set Build Date
        id: date
        run: echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Upload Output
        uses: actions/upload-artifact@v4
        with:
          name: WSA-${{ steps.date.outputs.date }}
          path: MagiskOnWSA/output
